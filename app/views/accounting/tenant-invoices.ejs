


<% if(!load_chunk){%> 
  <%- include('../shared/page-header') %>
  <%- include('../shared/top-page') %>
  <div class="page-content">
<%}%>
	<div class="container-fluid">
		<%- include('../shared/page-title') %>


		<!--begin::Entry-->
<div class="d-flex flex-column-fluid">
  <!--begin::Container-->
  <div class="container">
     <%- include('../shared/property-common') %>
     <div class="row">
      <div class="col-12">
        <div class="panel  panel-default">         
          <div class="panel-body">
            <div class='row'>
              <div class='col-lg-7'>
                <h4 class="card-title">Invoices</h4>
                <p class="card-title-desc"> Access/Manage all tenancy invoices.</p>
              </div>
              <div class='col-lg-5 text-right' style="margin: auto;">           
                  
                  <button  class="btn btn-warning small-block px-4 mt-2 mb-2 mr-2 " data-toggle="modal" data-target="#mdl_send_reminders" >SMS Reminders</button>
  
                  <a href="<%= base_url %>/accounting/tenant-invoices/new" class="btn btn-info small-block px-4 mt-2 mb-2 mr-2  dynamic-link"  >+ Create New Invoice</a>
               
              </div>
            </div>
            <div class="row">
              <div class='col-12'>          
                <hr>
                <table id='tbl_tenant_invoices' class="table table-nowrap border dt-responsive table-hover" style="width:100%">
                 <thead>
                    <tr>
                      <th>Date</th>       
                      <th>Invoice #</th>         
                      <th>Tenant</th>
                      <th>Unit</th>
                      <th>Amount</th>                          
                      <th>Paid Amount</th>                          
                      <th>Balance</th>  
                      <th>Status</th>  
                      <th>Actions</th>    
                    </tr>
                 </thead>
                </table>
                </div>
            </div>
          </div>
        </div>
      </div>
      </div>
  </div>
  <!--end::Container-->
</div>

<!-- preview invoice -->
<div id="mdl_preview_invoice" class="modal fade" role="dialog">
   <div class="modal-dialog modal-xl modal-dialog-scrollable">
      <!-- Modal content-->
      <div class="modal-content">          
         <div class="modal-header">
           <h5 id='preview_invoice_title' class="modal-title">Invoice Details</h5>
           <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <i class='bx bx-x'></i>
           </button>
       </div>
         <div id='preview_invoice_body' class="modal-body">
         
         </div>
         <div class="modal-footer">           
            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
         </div>
      </div>
   </div>
</div>
								</div>
								<!-- container-fluid -->
<% if(!load_chunk){%> </div> <%- include('../shared/page-footer') %> <%- include('../shared/admin-scripts') %> <%}%>

              
              <!-- add payment modal -->
<div id="mdl_add_payment" class="modal fade" role="dialog">
  <div class="modal-dialog modal-lg modal-dialog-centered">
     <!-- Modal content-->
     <div class="modal-content">          
        <div class="modal-header">
          <h5 id='add_payment_title' class="modal-title">Add Payment</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
           <i class='bx bx-x'></i>
          </button>
      </div>
      <form id="frm_add_payment" method='post' action ='#'>
        <div class="modal-body">
          <input type="hidden" name="bill_id" id = "payment_bill_id"/>
          <div class="row">
            <div class="col-lg-7">
              <div class="form-group row mb-4">
                <label for="payment_payment_date" class="col-sm-3 col-form-label">Pay Date <span class="text-danger">*</span></label>
                <div class="col-sm-9">             
                  <input id='payment_payment_date' type="datetime-local" name="payment_date" class="form-control"/>					
                </div>
              </div>
              <div class="form-group row mb-4">
                <label for="payment_payment_method" class="col-sm-3 col-form-label">Method <span class="text-danger">*</span></label>
                <div class="col-sm-9">
                  <select name="payment_method" class="form-control custom-select" id ="payment_payment_method">
                    <option value="Cash">Cash</option>
                    <option value="M-PESA">M-PESA</option>
                    <option value="Card Swipe">Card Swipe</option>
                    <option value="Bank Deposit">Bank Deposit</option>
                    <option value="Bank Transfer">Bank Transfer</option>
                    <option value="Cheque">Cheque</option>
                    <option value="Other">Other</option>
                  </select>
                </div>
              </div>
    
              <div class="form-group row mb-4">
                <label for="payment_payment_method" class="col-sm-3 col-form-label">Account<span class="text-danger">*</span></label>
                <div class="col-sm-9">
                    <select name='target_account' class="form-control selectpicker-select" data-size="5" data-live-search="true" tabindex="null" required >
                        <% for (var i = 0; i < property.accounts_list.length ; i++) { %>
                            <option value="<%= property.accounts_list[i].account_id %>" ><%= property.accounts_list[i].account_name %> (<%= property.accounts_list[i].account_no %>)</option>
                        <%}%>
                    </select>
                </div>
              </div>
    
              <div class="form-group row mb-4">
                <label for="payment_payment_amount" class="col-sm-3 col-form-label">Amount <span class="text-danger">*</span></label>
                <div class="col-sm-9">             
                  <input id='payment_payment_amount' type="number" name="payment_amount" class="form-control"/>          
                </div>
              </div>
    
              <div class="form-group row mb-4">
                <label for="payment_payment_ref" class="col-sm-3 col-form-label">Reference</label>
                <div class="col-sm-9">             
                  <input id='payment_payment_ref' type="text" name="payment_ref" class="form-control" autocomplete="off"/>          
                </div>
              </div>
    
              <div class="form-group row">
                <label for="payment_payment_by" class="col-sm-3 col-form-label">Paid By</label>
                <div class="col-sm-9">             
                  <input id='payment_payment_by' type="text" name="payment_by" class="form-control" autocomplete="off"/>          
                </div>
              </div>
            </div>
            <div class="col-lg-5">
              <label>Attach Payment Receipt</label>
              <p>
                <label for="payment_receipt" class="btn btn-light btn-sm">Click to attach File</label>
                <label  style='visibility: hidden;' id='btn_payment_remove_file' class="btn btn-danger btn-sm" onclick="clearPaymentFile()"> Remove File </label>
                <input name="payment_receipt" id='payment_receipt' type="file" accept=".png, .jpg, .jpeg, .pdf" onchange="initializePaymentFile(this)" hidden /> 
               </p>
               <div class="h100 v-100" id='payment_file_display'> </div>
            </div>
          </div>
                 
        </div>
        <div class="modal-footer">    
          <button id='btn_add_payment' type="submit" class="btn btn-success">Add Payment</button>       
           <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
        </div>
      </form>
     </div>
  </div>
</div>

<!-- edit invoice modal -->
<div id="mdl_edit_invoice" class="modal fade" role="dialog">
  <div class="modal-dialog modal-lg">
     <!-- Modal content-->
     <div class="modal-content">          
        <div class="modal-header">
          <h5 id='edit_invoice_title' class="modal-title">Edit Invoice</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
           <i class='bx bx-x'></i>
          </button>
      </div>
        <div id='edit_invoice_body' class="modal-body">
          <div class="row mb-10">
            <div class="col-12">
               <p class="text-dark font-weight-bold">Particulars</p>
               <table id="tbl_invoice_particulars" class="table border table-bodered table-striped table-sm">
                  <thead>
                     <tr>
                        <th>Particular</th>
                        <th>Amount</th>
                     </tr>
                  </thead>
                  <tbody> </tbody>
               </table>
               <input type="hidden" id="edit_invoice_id"/>              
                <button type="button" id="add_particular" class="btn btn-light mt-0">Add New Row</button> 
            </div>
         </div>
         <div class="modal-footer d-flex bg-light mt-3">
            <h4 id="bill_total">Total Kes 0.00</h4>
         </div>
        </div>
        <div class="modal-footer">           
           <button id="btn_update_changes" type="button" class="btn btn-success">Update Changes</button>
           <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </div>
     </div>
  </div>
</div>

<!-- send reminers-->
<div id="mdl_send_reminders" class="modal fade" role="dialog">
  <div class="modal-dialog modal-dialog-centered modal-lg">
     <!-- Modal content-->
     <div class="modal-content">          
        <div class="modal-header">
          <h5 class="modal-title">Send Bill Reminders</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
           <i class='bx bx-x'></i>
          </button>
      </div>
      <form id="frm_sms_reminders" method="post" action ="#">
        <div class="modal-body ml-3 mr-3">   
          <div class="form-group">
            <label for="balance_above">Balance</label>
            <input type="text" id="balance_above" name="balance_above" value="" data-min="0" data-max="50000" data-from="0" data-grid="true"/>
            <span class="text-muted">Click and drag to adjust</span>
          </div>                     
          <div class="form-group">
            <label for="defaulted_days">Defaulted Days</label>
            <input type="text" id="defaulted_days" name="defaulted_days" value="" data-min="0" data-max="30" data-from="0" data-grid="true"/>
            <span class="text-muted">Click and drag to adjust</span>
          </div>
          <hr class="dashed">
          <div class="row">
            <div class=col-12>
              <P>SMS Template</P>
            </div>
            <div class="col-lg-6 col-sm-12">
                <textarea id="sms_template" name="sms_template" class="form-control" rows="6">Dear {first_name}, You are requested to clear  your outstanding balance of {balance} for {property_name} - {unit_name} which was supposed to be cleared on {due_date}. </textarea>
            </div>
            <div class="col-lg-6 col-sm-12">
              <p>Field Values - <span class="text-muted"> Click to insert</span></p>
             
              <button type="button" data-sms="{first_name}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">First Name</button>
              <button type="button" data-sms="{last_name}"onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Last Name</button>
              <button type="button" data-sms="{balance}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Balance</button>
              <button type="button" data-sms="{paid_amount}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Paid Amount</button>
              <button type="button" data-sms="{bill_amount}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-2 mb-2">Bill Amount</button>
              <button type="button" data-sms="{property_name}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Property Name</button>
              <button type="button" data-sms="{unit_name}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Unit Name</button>
              <button type="button" data-sms="{bill_date}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Bill Date</button>
              <button type="button" data-sms="{due_date}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Due Date</button>
              <button type="button" data-sms="{bill_code}" onclick="insertField(this)" class=" btn btn-light btn-sm mr-1 mb-2">Invoice No</button>
            </div>
          </div>
         
        </div>
        <div class="modal-footer">     
          <button id="btn_send_sms" type="submit" class="btn btn-success">Send Reminders</button>      
           <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
        </div>
      </form>
        
     </div>
  </div>
</div>





<script> 
window.onload=function(){window.jQuery||window.location.reload()};
 
   $(document).ready(function() {

    $.getScriptCached("https://mozilla.github.io/pdf.js/build/pdf.js", function(){
        var pdfjsLib = window["pdfjs-dist/build/pdf"];
        pdfjsLib.GlobalWorkerOptions.workerSrc = "https://mozilla.github.io/pdf.js/build/pdf.worker.js";
      });

$('.selectpicker-select').selectpicker();
    
$("#tbl_invoice_particulars").SetEditable({
                columnsEd: "0, 1",   
                onEdit: function() {computeBill()},
                onDelete:  function() {computeBill()},
                $addButton: $("#add_particular"),
              });
   
$("#frm_sms_reminders").validate({
    rules:{
      sms_template: {
        required: true,
        maxlength: 320
      }
    },
    messages:{
      sms_template: {
        required: "No SMS template defined",
        maxlength: "SMS message limited to 320 characters"
      }
    }

  });

$("#frm_add_payment").validate({
    rules:{ 
      bill_id:{
			required: true,
			remote: "<%= base_url %>/accounting/tenant-invoices/bill-available"
		},
      payment_date:{
        required: true,
        date:true
      },
      payment_method:{
        required: true
      },
      payment_amount:{
        required: true,
        number: true,
        min: 10
      },
      payment_ref :{
        maxlength: 255
      },
      payment_by:{
        maxlength: 255
      }

    },
    messages:{ 
      bill_id: {
			required: "Please enter the invoice number",
			remote:"The invoice number does not exist in the system."
		},
      payment_date:{
        required: "Please click to select payment date",
        date:"Invalid date value"
      },
      payment_method:{
        required: "Invalid payment method"
      },
      payment_amount:{
        required: "Please enter the paid amount",
        number: "Please enter the paid amount",
        min: "Amount should be greater than 10"
      },
      payment_ref :{
        maxlength: "Maximum length required is 255 characters"
      },
      payment_by:{
        maxlength: "Maximum length required is 255 characters"
      }

    }
  });

$("#balance_above").ionRangeSlider({
    
    prefix: "Kes ",
    postfix:" +",
    step:100,
    grid_num:5
});

$("#defaulted_days").ionRangeSlider({
  
  postfix:" days +",      
  type:"single",
  grid_num:6
   
});

$("#tbl_tenant_invoices").DataTable({
        responsive: !0,
        searchDelay: 500,
       processing: !0,
         serverSide: true,
        order: [],
        ajax: {
          url: "<%= base_url %>/accounting/tenant-invoices",
          type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
        },
        columns: [{
          data: "bill_date"
        }, {
          data: "bill_code",
        }, {
          data: null,
          render: function(data, type, row) {
            return '<a class="text-info dynamic-link" href="<%= base_url %>/manage/tenants/view/' +
						   data.tenant_id +
						   '" >' +  data.tenant_name + '</a>';
          }
        }, {
          data: null,
          render: function(data, type, row) {
            return '<a class="text-info dynamic-link" href="<%= base_url %>/manage/units/info/' + data.unit_code + '" >'+ data.unit_name + '</a>';
          }
        }, {
          data: null,
          className: "text-md-left, text-lg-right",
          render: function(data, type, row){
            return formatMoney(data.total_amount);
          }
        }, {
          data: null,
          className: "text-md-left, text-lg-right",
          render: function(data, type, row){
            return formatMoney(data.paid_amount);
          }
        }, {
          data: null,
          className: "text-md-left, text-lg-right",
          render: function(data, row, type) {    
            var bal = data.total_amount - data.paid_amount;
            if(bal==data.total_amount && data.total_amount>0){
              return '<span class="text-danger">'+ formatMoney(bal)+'</span>';
            }else if(bal>0){
              return '<span class="text-warning">'+ formatMoney(bal)+'</span>';          
            }else{
              return '<span class="text-muted">'+ formatMoney(bal)+'</span>';
            }    
            
          }
        }, {
          data: null,
          render: function(data, row, type) {
            var bal = data.total_amount - data.paid_amount;
            if(data.is_cancelled) {
              return '<span class="badge badge-danger">Cancelled</span>';
            } else if(bal == data.total_amount && data.total_amount>0) {
              return '<span class="badge badge-warning">Uncleared</span>';
            } else if(bal >0 ) {
              return '<span class="badge badge-warning">Uncleared</span>';
            } else {
              return '<span class="badge badge-success">Cleared</span>';
            }
          }
        }, {
          data: null,
          responsivePriority: -1,
          render: function(data, type, row) {
            return actionData(data);
          },
        }, ],
      });
    
});

$("#frm_sms_reminders").submit(function(e){
  e.preventDefault();
  var valid = $("#frm_sms_reminders").valid();
  if(valid){
    $('#btn_send_sms').html('Please wait..');
        $("#btn_send_sms").attr("disabled", true);
         var data = new myFormData($(this));
        $.ajax({
            type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
            url: "<%= base_url %>/accounting/tenant-invoices/send-reminders",
            data: data,
            success: function(data) {
                $('#btn_send_sms').html('Send Reminders');
                $("#btn_send_sms").attr("disabled", false);
                if (data.Status == 200) {
                  $("#mdl_send_reminders").modal("hide");   
                  $("#sms_template").html('Dear {first_name}, You are requested to clear  your outstanding balance of {balance} for {property_name} - {unit_name} which was supposed to be cleared on {due_date}.')
                  showAppNotification('success', data.Message);
                } else {
                    showAppNotification('warning', data.Message);
                }
            },
            error: function(err) {
              $('#btn_send_sms').html('Send Reminders');
                $("#btn_send_sms").attr("disabled", false);
                showAppNotification( 'danger', 'Unable to complete your request. Please try again later!');
            }
        });
    
  }

});

$("#frm_add_payment").on("submit", function(e) {
        e.preventDefault();
         var isvalid = $("#frm_add_payment").valid();
         if (isvalid) {
        $('#btn_add_payment').html('Please wait..');
        $("#btn_add_payment").attr("disabled", true);
        var data = new FormData(this);
          $.ajax({
              type: "POST",
              processData: false,
			        contentType: false,
            async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
            url: "<%= base_url %>/accounting/tenant-invoices/add-payment",
            data: data,
            success: function(data) {
                $('#btn_add_payment').html('Add Payment');
                $("#btn_add_payment").attr("disabled", false);
                if (data.Status == 200) {
                  clearPaymentFile();
                  $("#mdl_add_payment").modal("hide");
                  $("#tbl_tenant_invoices").DataTable().ajax.reload();
                  showAppNotification('success', data.Message);
                } else {
                    showAppNotification('warning', data.Message);
                }
            },
            error: function(err) {
                $('#btn_add_payment').html('Add Payment');
                $("#btn_add_payment").attr("disabled", false);
                showAppNotification( 'danger', 'Unable to complete your request. Please try again later!');
            }
        });
    
      }
});
    
$("#btn_update_changes").click(function(e){
  e.preventDefault();
  var pats = $("#tbl_invoice_particulars").tableToJSON({
		onlyColumns: new Array(0, 1),
  });	
  var obj ={
    bill_particulars: pats,
    bill_id: $("#edit_invoice_id").val()
  }
  $.ajax({
        type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
        url: "<%= base_url %>/accounting/tenant-invoices/update-invoice",
        data: obj,        
        success: function(data) {
         
          if (data.Status == 200) {
            $("#mdl_edit_invoice").modal("hide");            
            showAppNotification("success", data.Message);
            $("#tbl_tenant_invoices").DataTable().ajax.reload();
          } else {
            showAppNotification("warning", data.Message);
          }
        },
        error: function(err) {
         showAppNotification( 'danger', 'Unable to complete your request. Please try again later!');
        }
      }); 

});


   
function setTodayDate(){ 
  $('#payment_payment_date').val(todaysDate());
}

    function actionData(data) {
      var bal = data.total_amount - data.paid_amount;
      var btns = '';
      if(data.is_cancelled) {
        btns = '<a class="dropdown-item" href="javascript:void(0)" onclick=\'previewInvoice("' + data.bill_id + '")\'>Preview</a><a class="dropdown-item" href="javascript:void(0)" onclick=\'downloadPdfInvoice("<%=base_url %>/accounting/tenant-invoices/download-invoice/' + data.bill_id + '")\'>Download</a>';
      } else {
        if(bal > 0) {
          if(data.paid_amount > 0) {
            btns = '<a class="dropdown-item" href="javascript:void(0)" onclick=\'previewInvoice("' + data.bill_id + '")\'>Preview</a><a class="dropdown-item" href="javascript:void(0)" onclick=\'downloadPdfInvoice("<%=base_url %>/accounting/tenant-invoices/download-invoice/' + data.bill_id + '")\'>Download</a><a class="dropdown-item text-warning" href="javascript:void(0)" onclick=\'cancelInvoice("' + data.bill_id + '")\'>Cancel</a><a class="dropdown-item" href="javascript:void(0)" onclick=\'editInvoice("' + data.bill_id + '")\'>Edit</a><a class="dropdown-item border-top text-info" href="javascript:void(0)" onclick=\'addPayment("' + data.bill_id + '")\'>Add Payment</a>';
          } else {
            btns = '<a class="dropdown-item" href="javascript:void(0)" onclick=\'previewInvoice("' + data.bill_id + '")\'>Preview</a><a class="dropdown-item" href="javascript:void(0)" onclick=\'downloadPdfInvoice("<%=base_url %>/accounting/tenant-invoices/download-invoice/' + data.bill_id + '")\'>Download</a><a class="dropdown-item text-warning" href="javascript:void(0)" onclick=\'cancelInvoice("' + data.bill_id + '")\'>Cancel</a><a class="dropdown-item" href="javascript:void(0)" onclick=\'editInvoice("' + data.bill_id + '")\'>Edit</a><a class="dropdown-item border-top text-info" href="javascript:void(0)" onclick=\'addPayment("' + data.bill_id + '")\'>Add Payment</a><a class="dropdown-item text-danger border-top" href="javascript:void(0)" onclick=\'deleteInvoice("' + data.bill_id + '")\'>Delete</a>';
          }
        } else {
          btns = '<a class="dropdown-item" href="javascript:void(0)" onclick=\'previewInvoice("' + data.bill_id + '")\'>Preview</a><a class="dropdown-item" href="javascript:void(0)" onclick=\'downloadPdfInvoice("<%=base_url %>/accounting/tenant-invoices/download-invoice/' + data.bill_id + '")\'>Download</a>';
        }
      }
      return row_begin + btns + row_end;
    }
       
  function previewInvoice(id) {
      $("#preview_invoice_body").html(loading_div);
      $("#mdl_preview_invoice .modal-footer").html('<button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>');
      $("#mdl_preview_invoice").modal('show');
      $.ajax({
        type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
        url: "<%= base_url %>/accounting/tenant-invoices/invoice-info",
        data: 'bill_id=' + id,
        success: function(data) {        
          if(data.data) {           
            var part1 = invoiceData(data.data);
            $("#preview_invoice_body").html(part1);
            $("#mdl_preview_invoice .modal-footer").html('<button type="button" class="btn btn-success" onclick="downloadPdfInvoice(\'<%=base_url %>/accounting/tenant-invoices/download-invoice/' + data.data.bill_id + '\')">Download</button><button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>');
          } else {
            var resp = '<div class="alert alert-warning fade show"><divclass="alert-text">' + data.Message + '</div></div>';
            $("#preview_invoice_body").html(resp);
          }
        },
        error: function(err) {
          var resp = '<div class="alert alert-danger fade show"><divclass="alert-text">An error occured while getting invoice details! Please try again.</div></div>';
          $("#preview_invoice_body").html(resp);
        }
      });
    }

    function cancelInvoice(id) {
      sharpAlert({
  title: 'Confirm?',
  text: "Are you sure you want to cancel this invoice?",
  type: 'warning',
  showCancelButton: true,
  confirmButtonText: 'Yes',
  confirmButtonClass:"btn btn-success mr-2 btn-swal",
  cancelButtonText: 'No',
  cancelButtonClass:"btn btn-danger mr-2 btn-swal",
 
  buttonsStyling: false
},(passed)=>{
  if (passed) {
    $.ajax({
		type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
		url: "<%= base_url %>/accounting/tenant-invoices/cancel",
		data: "invoice_id="+id,
		success: function(data) {
			$("#tbl_tenant_invoices").DataTable().ajax.reload();
			if (data.Status == 200) {
				showAppNotification("success", data.Message);
			} else {
				showAppNotification("warning", data.Message);
			}
		},
		error: function(err) {
			showAppNotification( 'danger', 'Unable to complete your request. Please try again later!');		
		},
  });
  
    
  } 
});
      
    }
    
    function editInvoice(id) {
      $("#tbl_invoice_particulars tbody").html('');
      $("#edit_invoice_title").html('Edit Invoice (Loading...)');
      $("#btn_update_changes").attr("disabled", true);
      $("#add_particular").attr("disabled", true);
     
      $("#mdl_edit_invoice").modal('show');
     
      $.ajax({
        type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
        url: "<%= base_url %>/accounting/tenant-invoices/invoice-info",
        data: 'bill_id=' + id,
        success: function(data) {
          if(data.data) {
            var invoice_info = data.data;
            $("#btn_update_changes").attr("disabled", false);
            $("#add_particular").attr("disabled", false); 
            $("#edit_invoice_id").val(invoice_info.bill_id);
            $("#edit_invoice_title").html('Edit Invoice (' + invoice_info.bill_code +")");

            var bills = JSON.parse(invoice_info.bills_breakdown);
            var total =0;
            for(var i = 0; i < bills.length; i++) {
              var row = '<tr><td>' + bills[i].bill_name + '</td><td class="text-right">' + bills[i].bill_amount + '</td>' + colEdicHtml +'</tr>';
              $("#tbl_invoice_particulars tbody").append(row);
              total += bills[i].bill_amount;
            }
           

            $("#bill_total").html("Total " + formatMoney(total));
          } else {
            $("#mdl_edit_invoice").modal('hide');
            showAppNotification('warning', data.Message);
          }
        },
        error: function(err) {
          $("#mdl_edit_invoice").modal('hide');
          showAppNotification( 'danger', 'Unable to complete your request. Please try again later!');
        }
      });
    }

    function computeBill() {
	
	var deps = $("#tbl_invoice_particulars").tableToJSON({
		onlyColumns: new Array(0, 1),
  });	
    var total = 0;
    
    for(var i = 0; i < deps.length; i++) {			
			var t = parseInt(deps[i]["Amount"]) || 0;
      total +=t;
      
			
    }
    $("#bill_total").html("Total " + formatMoney(total));
	

}
 
    
    function deleteInvoice(id) {
      sharpAlert({
  title: 'Confirm?',
  text: "Are you sure you want to delete this invoice?",
  type: 'warning',
  showCancelButton: true,
  confirmButtonText: 'Yes',
  confirmButtonClass:"btn btn-success mr-2 btn-swal",
  cancelButtonText: 'No',
  cancelButtonClass:"btn btn-danger mr-2 btn-swal",
 
  buttonsStyling: false
},(passed)=>{
  if (passed) {
    $.ajax({
		type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
		url: "<%= base_url %>/accounting/tenant-invoices/delete",
		data: "invoice_id="+id,
		success: function(data) {     
			$("#tbl_tenant_invoices").DataTable().ajax.reload();
			if (data.Status == 200) {
				showAppNotification("success", data.Message);
			} else {
				showAppNotification("warning", data.Message);
			}
		},
		error: function(err) {
			showAppNotification( 'danger', 'Unable to complete your request. Please try again later!');		
		},
  });
  
    
  } 
});
    }
    
    function addPayment(id) {
      $.ajax({
        type: "POST",
        async: true,  credentials: 'same-origin', headers: {'CSRF-Token': csrf_token},
        url: "<%= base_url %>/accounting/tenant-invoices/invoice-info",
        data: 'bill_id=' + id,
        success: function(data) {
          if(data.data) {
            var invoice_info = data.data;
            
            var balance  = invoice_info.total_amount - invoice_info.paid_amount;
            if(balance>0){
              $("#frm_add_payment").trigger('reset');
             
              $("#payment_bill_id").val(id);
              $("#add_payment_title").html("Add Payment (" + invoice_info.bill_code +")");
              $("#payment_payment_amount").val(balance);
              $("#payment_payment_by").val(invoice_info.first_name + " "  + invoice_info.last_name);
              setTodayDate();
              $("#mdl_add_payment").modal("show");

            }else{
              showAppNotification('warning', "This invoice has already been paid up");
            }
          
          } else {
            showAppNotification('warning', data.Message);
          }
        },
        error: function(err) {
          showAppNotification('warning', 'An error occured while getting invoice details! Please try again.');
        }
      });
  }
    
    var position;
	
  function getCaretPosition() {
      var ctlTextArea = $('#sms_template');
      position = ctlTextArea.selectionStart;
      return position;
  }


</script>
  
<% if(!load_chunk){%> </body></html> <%}%>